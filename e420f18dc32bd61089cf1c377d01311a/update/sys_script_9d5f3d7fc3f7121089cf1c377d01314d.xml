<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_1596199_attend_attendance_data</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="x_1596199_attend_attendance_data">status=Checked-Out^EQ<item display_value="Checked-Out" endquery="false" field="status" goto="false" newquery="false" operator="=" or="false" value="Checked-Out"/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>CalculateTotalHours</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[// (function executeRule(current, previous /*null when async*/) {

// 	// Add your code here

// })(current, previous);
(function executeRule(current, previous /*null when async*/) {
    // Ensure both check-in and check-out times exist
    if (!current.check_in_time.nil() && !current.check_out_time.nil()) {
        var checkIn = new GlideDateTime(current.check_in_time);
        var checkOut = new GlideDateTime(current.check_out_time);

        // Calculate total hours in milliseconds
        var diff = checkOut.getNumericValue() - checkIn.getNumericValue();
        var totalHours = diff / (1000 * 60 * 60); // Convert ms to hours

        // Update the total_hours field
        current.total_hours = totalHours.toFixed(2); // Keep 2 decimal places
    }
})(current, previous);
]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>truptibidave02</sys_created_by>
        <sys_created_on>2025-02-25 11:29:38</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>9d5f3d7fc3f7121089cf1c377d01314d</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_name>CalculateTotalHours</sys_name>
        <sys_overrides/>
        <sys_package display_value="Attendance Management System" source="x_1596199_attend">e420f18dc32bd61089cf1c377d01311a</sys_package>
        <sys_policy/>
        <sys_scope display_value="Attendance Management System">e420f18dc32bd61089cf1c377d01311a</sys_scope>
        <sys_update_name>sys_script_9d5f3d7fc3f7121089cf1c377d01314d</sys_update_name>
        <sys_updated_by>truptibidave02</sys_updated_by>
        <sys_updated_on>2025-03-03 06:30:22</sys_updated_on>
        <template/>
        <when>after</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=9d5f3d7fc3f7121089cf1c377d01314d"/>
    <sys_es_latest_script action="INSERT_OR_UPDATE">
        <id>9d5f3d7fc3f7121089cf1c377d01314d</id>
        <sys_created_by>truptibidave02</sys_created_by>
        <sys_created_on>2025-02-25 11:29:38</sys_created_on>
        <sys_id>3bbff1fbc3f7121089cf1c377d013105</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>truptibidave02</sys_updated_by>
        <sys_updated_on>2025-02-25 11:29:38</sys_updated_on>
        <table>sys_script</table>
        <use_es_latest>true</use_es_latest>
    </sys_es_latest_script>
</record_update>
